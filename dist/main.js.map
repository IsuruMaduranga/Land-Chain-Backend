{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/components/admin-registration/admin-registration.component.html","webpack:///./src/app/components/admin-registration/admin-registration.component.scss","webpack:///./src/app/components/admin-registration/admin-registration.component.ts","webpack:///./src/app/components/ads/ads.component.html","webpack:///./src/app/components/ads/ads.component.scss","webpack:///./src/app/components/ads/ads.component.ts","webpack:///./src/app/components/change-owner/change-owner.component.html","webpack:///./src/app/components/change-owner/change-owner.component.scss","webpack:///./src/app/components/change-owner/change-owner.component.ts","webpack:///./src/app/components/create-ad/create-ad.component.html","webpack:///./src/app/components/create-ad/create-ad.component.scss","webpack:///./src/app/components/create-ad/create-ad.component.ts","webpack:///./src/app/components/divide-land/divide-land.component.html","webpack:///./src/app/components/divide-land/divide-land.component.scss","webpack:///./src/app/components/divide-land/divide-land.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.scss","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/land-history/land-history.component.html","webpack:///./src/app/components/land-history/land-history.component.scss","webpack:///./src/app/components/land-history/land-history.component.ts","webpack:///./src/app/components/land-registration/land-registration.component.html","webpack:///./src/app/components/land-registration/land-registration.component.scss","webpack:///./src/app/components/land-registration/land-registration.component.ts","webpack:///./src/app/components/lands/lands.component.html","webpack:///./src/app/components/lands/lands.component.scss","webpack:///./src/app/components/lands/lands.component.ts","webpack:///./src/app/components/layout/navbar/navbar.component.html","webpack:///./src/app/components/layout/navbar/navbar.component.scss","webpack:///./src/app/components/layout/navbar/navbar.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.scss","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/my-ads/my-ads.component.html","webpack:///./src/app/components/my-ads/my-ads.component.scss","webpack:///./src/app/components/my-ads/my-ads.component.ts","webpack:///./src/app/components/my-lands/my-lands.component.html","webpack:///./src/app/components/my-lands/my-lands.component.scss","webpack:///./src/app/components/my-lands/my-lands.component.ts","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.scss","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/components/users/users.component.html","webpack:///./src/app/components/users/users.component.scss","webpack:///./src/app/components/users/users.component.ts","webpack:///./src/app/services/ad.service.ts","webpack:///./src/app/services/blockchain.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\n\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { LandRegistrationComponent } from './components/land-registration/land-registration.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { LandsComponent } from './components/lands/lands.component';\nimport { ChangeOwnerComponent } from './components/change-owner/change-owner.component';\nimport { AdminRegistrationComponent } from './components/admin-registration/admin-registration.component';\nimport { MyLandsComponent } from './components/my-lands/my-lands.component';\nimport { CreateAdComponent } from './components/create-ad/create-ad.component';\nimport { LandHistoryComponent } from './components/land-history/land-history.component';\nimport { MyAdsComponent } from './components/my-ads/my-ads.component';\nimport { DivideLandComponent } from './components/divide-land/divide-land.component';\n\n\nconst routes: Routes = [\n  {path:'',component:HomeComponent},\n  {path:'login',component:LoginComponent},\n  {path:'signup',component:SignupComponent},\n  {path:'landRegistration',component:LandRegistrationComponent,canActivate: [AuthGuard],data: { expectedRole: ['admin']}},\n  {path:'users',component:UsersComponent,canActivate: [AuthGuard],data: { expectedRole: ['admin']}},\n  {path:'lands',component:LandsComponent,canActivate: [AuthGuard],data: { expectedRole: ['admin','user']}},\n  {path:'changeOwner',component:ChangeOwnerComponent,canActivate: [AuthGuard],data: { expectedRole: ['admin']}},\n  {path:'adminRegistration',component:AdminRegistrationComponent,canActivate: [AuthGuard],data: { expectedRole: ['admin']}},\n  {path:'myLands',component:MyLandsComponent,canActivate: [AuthGuard],data: { expectedRole: ['user']}},\n  {path:'createAd',component:CreateAdComponent,canActivate: [AuthGuard],data: { expectedRole: ['user']}},\n  {path:'landHistory',component:LandHistoryComponent,canActivate: [AuthGuard],data: { expectedRole: ['admin','user']}},\n  {path:'myAds',component:MyAdsComponent,canActivate: [AuthGuard],data: { expectedRole: ['admin','user']}},\n  {path:'divideLand',component:DivideLandComponent,canActivate: [AuthGuard],data: { expectedRole: ['admin']}},\n  { path: '**', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'LandChain-Frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { JwtModule, JwtHelperService } from '@auth0/angular-jwt';\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/layout/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { LandRegistrationComponent } from './components/land-registration/land-registration.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { LandsComponent } from './components/lands/lands.component';\nimport { ChangeOwnerComponent } from './components/change-owner/change-owner.component';\nimport { AdminRegistrationComponent } from './components/admin-registration/admin-registration.component';\nimport { MyLandsComponent } from './components/my-lands/my-lands.component';\nimport { CreateAdComponent } from './components/create-ad/create-ad.component';\nimport { LandHistoryComponent } from './components/land-history/land-history.component';\nimport { AdsComponent } from './components/ads/ads.component';\nimport { MyAdsComponent } from './components/my-ads/my-ads.component';\nimport { DivideLandComponent } from './components/divide-land/divide-land.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem('token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    HomeComponent,\n    SignupComponent,\n    LandRegistrationComponent,\n    UsersComponent,\n    LandsComponent,\n    ChangeOwnerComponent,\n    AdminRegistrationComponent,\n    MyLandsComponent,\n    CreateAdComponent,\n    LandHistoryComponent,\n    AdsComponent,\n    MyAdsComponent,\n    DivideLandComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MDBBootstrapModule.forRoot(),\n    HttpClientModule,\n    FormsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter,\n        headerName: 'x-auth',\n        whitelistedDomains: ['localhost:4000'],\n        blacklistedRoutes: ['example.com/examplebadroute/'],\n        authScheme: ''\n      }\n    }),\n    NgFlashMessagesModule.forRoot()\n  ],\n  providers: [JwtHelperService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { UserService } from './services/user.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(public userService: UserService, private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot,state: RouterStateSnapshot): boolean{\n\n    const expectedRole = next.data.expectedRole;\n\n    if(!expectedRole.includes(this.userService.user)){\n      alert('Access not allowed! Login with suitable credentials!');\n      this.router.navigate([\"/login\"]);\n      return false;\n    }\n\n    return true;\n  \n  }\n  \n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <!-- Material form register -->\\n      <div class=\\\"card\\\">\\n\\n          <div class=\\\"card-header text-center bg-info\\\">\\n            <h5 class=\\\"text-light\\\">\\n              <strong>Admin Registration</strong>\\n            </h5>\\n          </div>\\n\\n          <!--Card content-->\\n          <div class=\\\"card-body\\\">\\n\\n            <!-- Form -->\\n            <form style=\\\"color: #757575;\\\" (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\">\\n\\n              <!-- First name -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"fn\\\">First name</label>\\n                <input type=\\\"text\\\" id=\\\"fn\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"firstName\\\" name=\\\"firstName\\\"\\n                  #fn=\\\"ngModel\\\" required pattern=\\\"^[A-Za-z]+$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"fn.touched && !fn.valid\\\">\\n                  <small *ngIf=\\\"fn.errors.required\\\">First name is required!</small>\\n                  <small *ngIf=\\\"fn.errors.pattern\\\">Invalid name!</small>\\n                </div>\\n              </div>\\n\\n              <!-- Last name -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"ln\\\">Last name</label>\\n                <input type=\\\"text\\\" id=\\\"ln\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"lastName\\\" name=\\\"lastName\\\"\\n                  #ln=\\\"ngModel\\\" required pattern=\\\"^[A-Za-z]+$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"ln.touched && !ln.valid\\\">\\n                  <small *ngIf=\\\"ln.errors.required\\\">Last name is required!</small>\\n                  <small *ngIf=\\\"ln.errors.pattern\\\">Invalid name!</small>\\n                </div>\\n              </div>\\n\\n              <!-- NIC -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"n\\\">NIC</label>\\n                <input type=\\\"text\\\" id=\\\"n\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"nic\\\" name=\\\"nic\\\" #n=\\\"ngModel\\\"\\n                  required pattern=\\\"^[0-9]{9}V$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"n.touched && !n.valid\\\">\\n                  <small *ngIf=\\\"n.errors.required\\\">NIC is required!</small>\\n                  <small *ngIf=\\\"n.errors.pattern\\\">Invalid NIC!</small>\\n                </div>\\n              </div>\\n\\n              <!-- email -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"e\\\">Email</label>\\n                <input type=\\\"email\\\" id=\\\"e\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"email\\\" name=\\\"email\\\" #e=\\\"ngModel\\\"\\n                  required pattern=\\\"^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"e.touched && !e.valid\\\">\\n                  <small *ngIf=\\\"e.errors.required\\\">Email is required!</small>\\n                  <small *ngIf=\\\"e.errors.pattern\\\">Invalid email!</small>\\n                </div>\\n              </div>\\n\\n              <!-- Pasword -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"p\\\">Password</label>\\n                <input type=\\\"password\\\" id=\\\"p\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"password\\\" name=\\\"password\\\"\\n                  #p=\\\"ngModel\\\" required pattern=\\\"^.{6,}\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"p.touched && !p.valid\\\">\\n                  <small *ngIf=\\\"p.errors.required\\\">Password is required!</small>\\n                  <small *ngIf=\\\"p.errors.pattern\\\">Password should have at least 6 characters!</small>\\n                </div>\\n              </div>\\n\\n              <!-- Pasword -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"p1\\\">Password(again)</label>\\n                <input type=\\\"password\\\" id=\\\"p1\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"password1\\\" name=\\\"password1\\\"\\n                  #p1=\\\"ngModel\\\" required pattern=\\\"^.{6,}\\\" [disabled]=\\\"!p.valid\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"p1.touched && !p1.valid\\\">\\n                  <small *ngIf=\\\"p1.errors.required\\\">Password is required!</small>\\n                  <small *ngIf=\\\"p1.errors.pattern\\\">Password should have at least 6 characters!</small>\\n                </div>\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"p1.valid\\\">\\n                  <small *ngIf=\\\"password!==password1\\\">Passwords are not equal!</small>\\n                </div>\\n              </div>\\n\\n\\n              <!-- Sign up button -->\\n              <button mdbBtn color=\\\"info\\\" block=\\\"true\\\" class=\\\"my-4\\\" type=\\\"submit\\\"\\n                [disabled]=\\\"!f.valid\\\">Register</button>\\n\\n            </form>\\n            <!-- Form -->\\n\\n          </div>\\n\\n      </div>\\n\\n    </div>\\n    <div class=\\\"col-md-3\\\"></div>\\n  </div>\\n</div>\\n\"","module.exports = \"mdb-card {\\n  align-self: auto; }\\n\\n.card {\\n  margin-top: 10%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lzdXJ1L1Byb2plY3RzL0xhbmRDaGFpbi1Gcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4tcmVnaXN0cmF0aW9uL2FkbWluLXJlZ2lzdHJhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4tcmVnaXN0cmF0aW9uL2FkbWluLXJlZ2lzdHJhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1kYi1jYXJke1xuICAgIGFsaWduLXNlbGY6IGF1dG87XG59XG5cbi5jYXJke1xuICAgIG1hcmdpbi10b3A6IDEwJTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from '../../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-registration',\n  templateUrl: './admin-registration.component.html',\n  styleUrls: ['./admin-registration.component.scss']\n})\nexport class AdminRegistrationComponent implements OnInit {\n\n  firstName:string;\n  lastName:string;\n  nic:string;\n  email:string;\n  password:string;\n  password1:string;\n\n  constructor(private userService:UserService,private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n\n    const userData = {\n      firstName:this.firstName,\n      lastName:this.lastName,\n      nic:this.nic,\n      email:this.email,\n      password:this.password\n    }\n\n    this.userService.registerAdmin(userData).subscribe(res=>{\n      this.firstName = null;\n      this.lastName = null;\n      this.nic = null;\n      this.email = null;\n      this.password =null;\n      this.password1 =null;\n      \n      if(res.token){\n        alert(\"done\");\n        this.router.navigate([\"/\"]);\n      }else{\n        alert(\"Server Error!\");\n      }\n    },e=>{\n      if (e.error instanceof ProgressEvent) {\n        alert('An error occurred!');\n      } else {\n        alert(e.error.message);\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"ads === undefined || ads.length == 0\\\" >\\n              <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                No ads to show\\n              </div>\\n          </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\"></div>\\n  </div>\\n  <div class=\\\"row\\\">\\n\\n    <div *ngFor=\\\"let ad of ads\\\">\\n\\n      <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n        <img class=\\\"card-img-top\\\" src=\\\"assets/land.jpg\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <h3 class=\\\"card-title\\\">{{ad.city}}</h3>\\n          <h5 class=\\\"card-title\\\">{{ad.size}} perchs</h5>\\n          <h5 class=\\\"card-title\\\">{{ad.price}}$</h5>\\n          <p class=\\\"card-text\\\">Land ID:{{ad.landId}}</p>\\n          <p class=\\\"card-text\\\">Owner:{{ad.ownerId}}</p>\\n          <p class=\\\"card-text\\\">{{ad.description}}</p>\\n          <p class=\\\"card-text\\\">Call {{ad.phone}} for more info</p>\\n\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\"","module.exports = \".card {\\n  margin: 20px; }\\n\\n.alert {\\n  margin: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lzdXJ1L1Byb2plY3RzL0xhbmRDaGFpbi1Gcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvYWRzL2Fkcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQ0osRUFBQTs7QUFFQTtFQUNJLFlBQ0osRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRzL2Fkcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJke1xuICAgIG1hcmdpbjogMjBweFxufVxuXG4uYWxlcnR7XG4gICAgbWFyZ2luOiAyMHB4XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AdService } from 'src/app/services/ad.service';\n\n@Component({\n  selector: 'app-ads',\n  templateUrl: './ads.component.html',\n  styleUrls: ['./ads.component.scss']\n})\nexport class AdsComponent implements OnInit {\n  ads: any[];\n\n  constructor(private adService: AdService) { }\n\n  ngOnInit() {\n    this.adService.getAllAds().subscribe(data => {\n      this.ads = data;\n    }, e => {\n      if (e.error instanceof ProgressEvent) {\n        alert('An error occurred!');\n      } else {\n        alert(e.error.message);\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n\\n          <div class=\\\"card-header text-center bg-info\\\">\\n            <h5 class=\\\"text-light\\\">\\n              <strong>Change owner</strong>\\n            </h5>\\n          </div>\\n\\n\\n          <!--Card content-->\\n          <div class=\\\"card-body\\\">\\n\\n            <!-- Form -->\\n            <form  style=\\\"color: #757575;\\\" (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\">\\n\\n              <!-- Land id -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"fn\\\">Land ID</label>\\n                <input type=\\\"text\\\" id=\\\"fn\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"landId\\\" name=\\\"landId\\\"\\n                  #fn=\\\"ngModel\\\" required pattern=\\\"^[0-9]+$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"fn.touched && !fn.valid\\\">\\n                  <small *ngIf=\\\"fn.errors.required\\\">Land ID is required!</small>\\n                  <small *ngIf=\\\"fn.errors.pattern\\\">Invalid ID!</small>\\n                </div>\\n              </div>\\n\\n              <!-- Owner NIC -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"ln\\\">New owner's NIC</label>\\n                <input type=\\\"text\\\" id=\\\"ln\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"newOwnerId\\\" name=\\\"newOwnerId\\\"\\n                  #ln=\\\"ngModel\\\" required pattern=\\\"^[0-9]{9}V$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"ln.touched && !ln.valid\\\">\\n                  <small *ngIf=\\\"ln.errors.required\\\">NIC is required!</small>\\n                  <small *ngIf=\\\"ln.errors.pattern\\\">Invalid NIC!</small>\\n                </div>\\n              </div>\\n\\n              <!-- Register button-->\\n              <button mdbBtn color=\\\"info\\\" block=\\\"true\\\" class=\\\"my-4\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">Change</button>\\n              <!-- Register -->\\n\\n            </form>\\n            <!-- Form -->\\n\\n          </div>\\n\\n      </div>\\n\\n    </div>\\n    <div class=\\\"col-md-3\\\"></div>\\n  </div>\\n</div>\\n\"","module.exports = \"mdb-card {\\n  align-self: auto; }\\n\\n.card {\\n  margin-top: 10%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lzdXJ1L1Byb2plY3RzL0xhbmRDaGFpbi1Gcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvY2hhbmdlLW93bmVyL2NoYW5nZS1vd25lci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2hhbmdlLW93bmVyL2NoYW5nZS1vd25lci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1kYi1jYXJke1xuICAgIGFsaWduLXNlbGY6IGF1dG87XG59XG5cbi5jYXJke1xuICAgIG1hcmdpbi10b3A6IDEwJTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\nimport { BlockchainService } from 'src/app/services/blockchain.service';\n\n@Component({\n  selector: 'app-change-owner',\n  templateUrl: './change-owner.component.html',\n  styleUrls: ['./change-owner.component.scss']\n})\nexport class ChangeOwnerComponent implements OnInit {\n\n  constructor(private bService: BlockchainService) { }\n  landId: String;\n  newOwnerId: String;\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    const data = {\n      landId: this.landId,\n      newOwnerId: this.newOwnerId\n    }\n\n    this.bService.changeOwner(data).subscribe(res => {\n      this.landId = null;\n      this.newOwnerId = null;\n      alert(\"done\");\n    }, e => {\n      if (e.error instanceof ProgressEvent) {\n        alert('An error occurred!');\n      } else {\n        alert(e.error.message);\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <!-- Material form register -->\\n      <div class=\\\"card\\\">\\n\\n          <div class=\\\"card-header text-center bg-info\\\">\\n            <h5 class=\\\"text-light\\\">\\n              <strong>Create Advertisment</strong>\\n            </h5>\\n          </div>\\n\\n          <!--Card content--> \\n          <div class=\\\"card-body\\\">\\n\\n            <!-- Form -->\\n            <form style=\\\"color: #757575;\\\" (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\">\\n\\n              <!-- Land Id -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"id\\\">Land ID</label>\\n                <input type=\\\"text\\\" id=\\\"id\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"landId\\\" name=\\\"landId\\\"\\n                  #id=\\\"ngModel\\\" required pattern=\\\"^[0-9]+$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"id.touched && !id.valid\\\">\\n                  <small *ngIf=\\\"id.errors.required\\\">Land ID is required!</small>\\n                  <small *ngIf=\\\"id.errors.pattern\\\">ID should contains only numbers!</small>\\n                </div>\\n              </div>\\n\\n              <!-- Size -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"size1\\\">Land size in perchs(Use whole numbers only)</label>\\n                <input type=\\\"text\\\" id=\\\"size1\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"size\\\" name=\\\"size\\\"\\n                  #size1=\\\"ngModel\\\" required pattern=\\\"^[0-9]+$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"size1.touched && !size1.valid\\\">\\n                  <small *ngIf=\\\"size1.errors.required\\\">Size is required!</small>\\n                  <small *ngIf=\\\"size1.errors.pattern\\\">Size should contains only numbers!</small>\\n                </div>\\n              </div>\\n\\n              <!-- Phone -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"phone1\\\">Contact Number</label>\\n                <input type=\\\"text\\\" id=\\\"phone1\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"phone\\\" name=\\\"phone\\\"\\n                  #phone1=\\\"ngModel\\\" required pattern=\\\"^[0-9]{10}$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"phone1.touched && !phone1.valid\\\">\\n                  <small *ngIf=\\\"phone1.errors.required\\\">Contact number is required!</small>\\n                  <small *ngIf=\\\"phone1.errors.pattern\\\">Invalid phone number!</small>\\n                </div>\\n              </div>\\n\\n              <!-- Price -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"price1\\\">Price in LKR</label>\\n                <input type=\\\"text\\\" id=\\\"price1\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"price\\\" name=\\\"price\\\"\\n                  #price1=\\\"ngModel\\\" required pattern=\\\"^[0-9]+$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"price1.touched && !price1.valid\\\">\\n                  <small *ngIf=\\\"price1.errors.required\\\">Price is required!</small>\\n                  <small *ngIf=\\\"price1.errors.pattern\\\">Invalid price!</small>\\n                </div>\\n              </div>\\n\\n              <!-- City -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"city1\\\">City</label>\\n                <input type=\\\"text\\\" id=\\\"city1\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"city\\\" name=\\\"city\\\" #city1=\\\"ngModel\\\" required pattern=\\\"^[A-Za-z]+$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"city1.touched && !city1.valid\\\">\\n                  <small *ngIf=\\\"city1.errors.required\\\">City is required!</small>\\n                  <small *ngIf=\\\"city1.errors.pattern\\\">Invalid city!</small>\\n                </div>\\n              </div>\\n\\n              <!-- Sign up button -->\\n              <button mdbBtn color=\\\"info\\\" block=\\\"true\\\" class=\\\"my-4\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">Create AD</button>\\n\\n            </form>\\n            <!-- Form -->\\n\\n          </div>\\n          \\n      </div>\\n\\n    </div>\\n    <div class=\\\"col-md-3\\\"></div>\\n  </div>\\n</div>\\n\"","module.exports = \"mdb-card {\\n  align-self: auto; }\\n\\n.card {\\n  margin-top: 10%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lzdXJ1L1Byb2plY3RzL0xhbmRDaGFpbi1Gcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvY3JlYXRlLWFkL2NyZWF0ZS1hZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3JlYXRlLWFkL2NyZWF0ZS1hZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1kYi1jYXJke1xuICAgIGFsaWduLXNlbGY6IGF1dG87XG59XG5cbi5jYXJke1xuICAgIG1hcmdpbi10b3A6IDEwJTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AdService } from 'src/app/services/ad.service';\n\n@Component({\n  selector: 'app-create-ad',\n  templateUrl: './create-ad.component.html',\n  styleUrls: ['./create-ad.component.scss']\n})\nexport class CreateAdComponent implements OnInit {\n\n  landId:String;\n  size:String;\n  phone:String;\n  price:String;\n  city:String;\n\n\n  constructor(private adService:AdService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n\n    const adData = {\n      landId:this.landId,\n      size:this.size,\n      phone:this.phone,\n      price:this.price,\n      city:this.city\n    }\n\n    this.adService.post(adData).subscribe(res=>{\n        alert('done');\n        this.landId = null;\n        this.size = null;\n        this.phone = null;\n        this.price = null;\n        this.city = null;\n    },e=>{\n      if (e.error instanceof ProgressEvent) {\n        alert('An error occurred!');\n      } else {\n        alert(e.error.message);\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n       \\n\\n          <div class=\\\"card-header text-center bg-info\\\">\\n            <h5 class=\\\"text-light\\\">\\n              <strong>Sign In</strong>\\n            </h5>\\n          </div>\\n\\n\\n          <!--Card content-->\\n          <div class=\\\"card-body\\\">\\n\\n            <!-- Form -->\\n            <form style=\\\"color: #757575;\\\" (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\">\\n\\n              <!-- Land ID -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"id\\\">Land Id</label>\\n                <input type=\\\"text\\\" name=\\\"id\\\" id=\\\"id\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"id\\\" #id1=\\\"ngModel\\\" required pattern=\\\"^[0-9]+$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"id1.touched && !id1.valid\\\">\\n                  <small *ngIf=\\\"nic1.errors.required\\\">Land id is required!</small>\\n                  <small *ngIf=\\\"nic1.errors.pattern\\\">Invalid id!</small>\\n                </div>\\n              </div>\\n\\n\\n              <!-- New Ids-->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"materialLoginFormPassword\\\">Enter new land id's seperated by comma's</label>\\n                <input type=\\\"text\\\" name=\\\"newIds\\\" id=\\\"pass\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"newIds\\\" #pass=\\\"ngModel\\\" required pattern=\\\"^([0-9]+,[0-9]+)(,[0-9]+)*\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"pass.touched && !pass.valid\\\">\\n                  <small *ngIf=\\\"pass.errors.required\\\">New Id's are required!</small>\\n                  <small *ngIf=\\\"pass.errors.pattern\\\">Invalid input!</small>\\n                </div>\\n              </div>\\n\\n              <!-- Sign in button -->\\n              <button mdbBtn color=\\\"info\\\" block=\\\"true\\\" class=\\\"my-4\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">Divide</button>\\n              <!-- Register -->\\n\\n            </form>\\n            <!-- Form -->\\n\\n          </div>\\n\\n   \\n\\n      </div>\\n\\n    </div>\\n    <div class=\\\"col-md-3\\\"></div>\\n  </div>\\n</div>\\n\"","module.exports = \"mdb-card {\\n  align-self: auto; }\\n\\n.card {\\n  margin-top: 20%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lzdXJ1L1Byb2plY3RzL0xhbmRDaGFpbi1Gcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvZGl2aWRlLWxhbmQvZGl2aWRlLWxhbmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2RpdmlkZS1sYW5kL2RpdmlkZS1sYW5kLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWRiLWNhcmR7XG4gICAgYWxpZ24tc2VsZjogYXV0bztcbn1cblxuLmNhcmR7XG4gICAgbWFyZ2luLXRvcDogMjAlO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { BlockchainService } from 'src/app/services/blockchain.service';\n\n@Component({\n  selector: 'app-divide-land',\n  templateUrl: './divide-land.component.html',\n  styleUrls: ['./divide-land.component.scss']\n})\nexport class DivideLandComponent implements OnInit {\n  id: String;\n  newIds: String;\n\n  constructor(private bService: BlockchainService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    let nIds = this.newIds.split(\",\");\n\n    let valid = true;\n    nIds.forEach(e1 => {\n      let count = 0;\n      nIds.forEach(e2 => {\n        if (e1 === e2) {\n          count++;\n        }\n      });\n      if (count > 1) {\n        valid = false;\n      }\n    });\n\n    if (!valid) {\n      alert('Two new land id\\'s cannot be equal');\n      this.newIds = null;\n    } else {\n      const data = {\n        landId: this.id,\n        newIds: nIds\n      };\n\n      this.bService.divideLand(data).subscribe(res => {\n        this.id = null;\n        this.newIds = null;\n        alert(\"done\");\n      }, e => {\n        if (e.error instanceof ProgressEvent) {\n          alert('An error occurred!');\n        } else {\n          alert(e.error.message);\n        }\n      });\n    }\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"!this.userService.user\\\">\\n  <app-login></app-login>\\n</div>\\n\\n  <div *ngIf=\\\"this.userService.user==='user'\\\">\\n        <app-ads></app-ads>\\n  </div>\\n\\n\\n<div *ngIf=\\\"this.userService.user==='admin'\\\">\\n  <div class=\\\"admin\\\">\\n    <h1>Admin Panel</h1>\\n  </div>\\n</div>\\n\"","module.exports = \"p {\\n  margin-left: auto;\\n  margin-right: auto;\\n  text-align: center; }\\n\\n.admin {\\n  text-align: center;\\n  padding-top: 25%;\\n  padding-bottom: 25%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lzdXJ1L1Byb2plY3RzL0xhbmRDaGFpbi1Gcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLG1CQUFtQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwe1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5hZG1pbntcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDI1JTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMjUlO1xufVxuXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private userService:UserService,private router: Router) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n\\n      <form class=\\\"form-inline\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"form-group mx-sm-3 mb-2\\\">\\n          <label for=\\\"id\\\" class=\\\"sr-only\\\">Password</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputPassword2\\\" placeholder=\\\"ID\\\" [(ngModel)]=\\\"landId\\\" name=\\\"landId\\\">\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary mb-2\\\">Get History</button>\\n      </form>\\n\\n    </div>\\n    <div class=\\\"col-md-3\\\"></div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n\\n      <ng-flash-message></ng-flash-message>\\n\\n      <div *ngIf=\\\"previousLand\\\">\\n        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n          This land is divided from Land No-{{previousLand}}.\\n          <br />\\n          Search for Land No-{{previousLand}} to get more history.\\n        </div>\\n      </div>\\n\\n      <ul class=\\\"list-group\\\">\\n        <div *ngIf=\\\"lands\\\">\\n          <div *ngIf=\\\"!previousLand\\\">\\n            <li class=\\\"list-group-item list-group-item-danger\\\">\\n              End of History!\\n            </li>\\n          </div>\\n        </div>\\n        <div *ngFor=\\\"let land of lands;index as i\\\">\\n          <li class=\\\"list-group-item list-group-item-success\\\" *ngIf=\\\"land.status!=='DIVIDED'\\\">\\n            owner {{i+1}} --> {{land.owner.slice(-10,-1)}}V\\n            <br />\\n            registered time: {{land.regTime}}\\n          </li>\\n        </div>\\n      </ul>\\n\\n      <div *ngIf=\\\"currentOwner\\\">\\n        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n          Current owner is {{currentOwner}}\\n          <br />\\n          End of History!\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"childLands\\\">\\n        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n          This land has divided into following lands.\\n          <div *ngFor=\\\"let id of childLands\\\">\\n            Land ID --> {{id}}\\n          </div> \\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"col-md-3\\\"></div>\\n  </div>\\n</div>\\n\"","module.exports = \".list-group {\\n  padding-top: 10%;\\n  padding-bottom: 10%; }\\n\\n.list-group-item {\\n  margin: 10px; }\\n\\n.form-inline {\\n  padding: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lzdXJ1L1Byb2plY3RzL0xhbmRDaGFpbi1Gcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvbGFuZC1oaXN0b3J5L2xhbmQtaGlzdG9yeS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLGdCQUFnQjtFQUNoQixtQkFBbUIsRUFBQTs7QUFHdkI7RUFDSSxZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksYUFDSixFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9sYW5kLWhpc3RvcnkvbGFuZC1oaXN0b3J5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4ubGlzdC1ncm91cHtcbiAgICBwYWRkaW5nLXRvcDogMTAlO1xuICAgIHBhZGRpbmctYm90dG9tOiAxMCU7XG59XG5cbi5saXN0LWdyb3VwLWl0ZW17XG4gICAgbWFyZ2luOiAxMHB4O1xufVxuXG4uZm9ybS1pbmxpbmV7XG4gICAgcGFkZGluZzoxMHB4XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { BlockchainService } from 'src/app/services/blockchain.service';\n\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport { LandsComponent } from '../lands/lands.component';\n\n@Component({\n  selector: 'app-land-history',\n  templateUrl: './land-history.component.html',\n  styleUrls: ['./land-history.component.scss']\n})\nexport class LandHistoryComponent implements OnInit {\n  landId: String;\n  lands: any[];\n  previousLand: String;\n  currentOwner: String;\n  childLands:String[];\n\n  constructor(private bService: BlockchainService, private ngf: NgFlashMessageService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    const data = {\n      landId: this.landId,\n    }\n\n    this.bService.getLandHistory(data).subscribe(res => {\n      this.previousLand = null;\n      this.lands = null;\n      this.currentOwner = null;\n      this.childLands = null;\n\n      this.lands = res;\n      if (this.lands[0].previousLand) {\n        this.previousLand = this.lands[0].previousLand.split(\"#\")[1];\n      }\n      if (this.lands[this.lands.length - 1].status === \"VALID\") {\n        this.currentOwner = this.lands[this.lands.length - 1].owner.split(\"#\")[1];\n      }\n      if (this.lands[this.lands.length - 1].childLands) {\n        this.childLands = this.lands[this.lands.length - 1].childLands;\n      }\n\n    }, e => {\n      this.previousLand = null;\n      this.lands = null;\n      this.currentOwner = null;\n      if (e.error instanceof ProgressEvent) {\n        alert('An error occurred!');\n      } else {\n        this.ngf.showFlashMessage({\n          messages: [\"History not available!\"],\n          dismissible: true,\n          timeout: 2000,\n          type: 'danger'\n        });\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n       \\n\\n          <div class=\\\"card-header text-center bg-info\\\">\\n            <h5 class=\\\"text-light\\\">\\n              <strong>Land Registration</strong>\\n            </h5>\\n          </div>\\n\\n\\n          <!--Card content-->\\n          <div class=\\\"card-body\\\">\\n\\n            <!-- Form -->\\n            <form style=\\\"color: #757575;\\\" (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\">\\n\\n              <!-- Land id -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"fn\\\">Land ID</label>\\n                <input type=\\\"text\\\" id=\\\"fn\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"landId\\\" name=\\\"landId\\\"\\n                  #fn=\\\"ngModel\\\" required pattern=\\\"^[0-9]+$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"fn.touched && !fn.valid\\\">\\n                  <small *ngIf=\\\"fn.errors.required\\\">Land ID is required!</small>\\n                  <small *ngIf=\\\"fn.errors.pattern\\\">Invalid ID!</small>\\n                </div>\\n              </div>\\n\\n\\n              <!-- Owner NIC -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"ln\\\">Owner NIC</label>\\n                <input type=\\\"text\\\" id=\\\"ln\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"ownerNIC\\\" name=\\\"ownerNIC\\\"\\n                  #ln=\\\"ngModel\\\" required pattern=\\\"^[0-9]{9}V$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"ln.touched && !ln.valid\\\">\\n                  <small *ngIf=\\\"ln.errors.required\\\">Owner NIC is required!</small>\\n                  <small *ngIf=\\\"ln.errors.pattern\\\">Invalid NIC!</small>\\n                </div>\\n              </div>\\n\\n\\n              <!-- Registration button -->\\n              <button mdbBtn color=\\\"info\\\" block=\\\"true\\\" class=\\\"my-4\\\" type=\\\"submit\\\"\\n                [disabled]=\\\"!f.valid\\\">Register</button>\\n              <!-- Register -->\\n              <p>\\n                Register land in the blockchain\\n              </p>\\n\\n            </form>\\n            <!-- Form -->\\n\\n          </div>\\n\\n      </div>\\n\\n    </div>\\n    <div class=\\\"col-md-3\\\"></div>\\n  </div>\\n</div>\\n\"","module.exports = \"mdb-card {\\n  align-self: auto; }\\n\\n.card {\\n  margin-top: 10%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lzdXJ1L1Byb2plY3RzL0xhbmRDaGFpbi1Gcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvbGFuZC1yZWdpc3RyYXRpb24vbGFuZC1yZWdpc3RyYXRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2xhbmQtcmVnaXN0cmF0aW9uL2xhbmQtcmVnaXN0cmF0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWRiLWNhcmR7XG4gICAgYWxpZ24tc2VsZjogYXV0bztcbn1cblxuLmNhcmR7XG4gICAgbWFyZ2luLXRvcDogMTAlO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\nimport { BlockchainService } from 'src/app/services/blockchain.service';\n\n@Component({\n  selector: 'app-land-registration',\n  templateUrl: './land-registration.component.html',\n  styleUrls: ['./land-registration.component.scss']\n})\nexport class LandRegistrationComponent implements OnInit {\n  landId: string;\n  ownerNIC: string;\n\n  constructor(private bService: BlockchainService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    const landData = {\n      id: this.landId,\n      ownerId: this.ownerNIC,\n    }\n\n    this.bService.registerLand(landData).subscribe(res => {\n      this.landId = null;\n      this.ownerNIC = null;\n      alert(\"done\");\n    }, e => {\n      if (e.error instanceof ProgressEvent) {\n        alert('An error occurred!');\n      } else {\n        alert(e.error.message);\n      }\n    });\n  }\n\n\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <ul class=\\\"list-group\\\">\\n        <div *ngFor=\\\"let land of lands\\\">\\n          <li class=\\\"list-group-item list-group-item-success\\\">\\n            id: {{land.id}}\\n            <br />\\n            owner: {{land.owner.slice(-10,-1)}}\\n            <br />\\n            registered time: {{land.regTime}}\\n            <br />\\n            status: {{land.status}}\\n          </li>\\n        </div>\\n        <div *ngIf=\\\"lands === undefined || lands.length == 0\\\">\\n          <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n            No registered lands!\\n          </div>\\n        </div>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-md-3\\\"></div>\\n  </div>\\n</div>\\n\"","module.exports = \".list-group {\\n  padding-top: 10%;\\n  padding-bottom: 10%; }\\n\\n.list-group-item {\\n  margin: 10px; }\\n\\n.card {\\n  margin: 10px;\\n  padding: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lzdXJ1L1Byb2plY3RzL0xhbmRDaGFpbi1Gcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvbGFuZHMvbGFuZHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxnQkFBZ0I7RUFDaEIsbUJBQW1CLEVBQUE7O0FBR3ZCO0VBQ0ksWUFBWSxFQUFBOztBQUdoQjtFQUNJLFlBQVk7RUFDWixhQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2xhbmRzL2xhbmRzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4ubGlzdC1ncm91cHtcbiAgICBwYWRkaW5nLXRvcDogMTAlO1xuICAgIHBhZGRpbmctYm90dG9tOiAxMCU7XG59XG5cbi5saXN0LWdyb3VwLWl0ZW17XG4gICAgbWFyZ2luOiAxMHB4O1xufVxuXG4uY2FyZHtcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgcGFkZGluZzoxMHB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\nimport { BlockchainService } from '../../services/blockchain.service';\n\n@Component({\n  selector: 'app-lands',\n  templateUrl: './lands.component.html',\n  styleUrls: ['./lands.component.scss']\n})\nexport class LandsComponent implements OnInit {\n  lands: any[];\n\n  constructor(private bService: BlockchainService) { }\n\n  ngOnInit() {\n    this.bService.getLands().subscribe(res => {\n      this.lands = res;\n    }, e => {\n      if (e.error instanceof ProgressEvent) {\n        alert('An error occurred!');\n      } else {\n        alert(e.error.message);\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"\\\">\\n  <!--Navbar-->\\n  <mdb-navbar SideClass=\\\"navbar navbar-expand-xl navbar-dark info-color-dark\\\" style=\\\"opacity: 0.5;\\\">\\n\\n    <!-- Navbar brand -->\\n    <mdb-navbar-brand><a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        <mdb-icon fas icon=\\\"link\\\"></mdb-icon>Land Chain\\n      </a></mdb-navbar-brand>\\n\\n    <!-- Collapsible content -->\\n    <links>\\n\\n      <!-- Links -->\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"this.userService.user==='admin'\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link waves-light\\\" routerLink=\\\"/adminRegistration\\\" mdbWavesEffect>Admin-Registration</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"this.userService.user==='admin'\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link waves-light\\\" routerLink=\\\"/landRegistration\\\" mdbWavesEffect>Land-Registration</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"this.userService.user==='admin'\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link waves-light\\\" routerLink=\\\"/changeOwner\\\" mdbWavesEffect>Change-Owner</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"this.userService.user==='admin'\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link waves-light\\\" routerLink=\\\"/divideLand\\\" mdbWavesEffect>Divide-Land</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"this.userService.user==='admin'\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link waves-light\\\" routerLink=\\\"/users\\\" mdbWavesEffect>Users</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"this.userService.user==='admin'\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link waves-light\\\" routerLink=\\\"/lands\\\" mdbWavesEffect>Lands</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"this.userService.user==='user'\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link waves-light\\\" routerLink=\\\"/myLands\\\" mdbWavesEffect>My-Lands</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"this.userService.user==='user'\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link waves-light\\\" routerLink=\\\"/createAd\\\" mdbWavesEffect>Create-Advertisment</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"this.userService.user==='user'\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link waves-light\\\" routerLink=\\\"/landHistory\\\" mdbWavesEffect>Check-Land-History</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"this.userService.user==='user'\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link waves-light\\\" routerLink=\\\"/myAds\\\" mdbWavesEffect>My-Ads</a>\\n        </li>\\n        \\n      </ul>\\n\\n      <div *ngIf=\\\"this.userService.user\\\">\\n        <ul class=\\\"navbar-nav\\\">\\n\\n          <h5 class=\\\" nav-link waves-light\\\">{{this.userService.nic}}</h5>\\n\\n\\n          <li class=\\\"nav-item dropdown\\\" dropdown>\\n            <a dropdownToggle mdbWavesEffect type=\\\"button\\\" class=\\\"nav-link dropdown-toggle waves-light\\\" mdbWavesEffect>\\n              <mdb-icon fas icon=\\\"user\\\"></mdb-icon><span class=\\\"caret\\\"></span>\\n            </a>\\n            <div *dropdownMenu class=\\\"dropdown-menu dropdown dropdown-primary\\\" role=\\\"menu\\\">\\n              <a class=\\\"dropdown-item waves-light\\\" mdbWavesEffect (click)=\\\"logout()\\\">Logout</a>\\n            </div>\\n          </li>\\n        </ul>\\n      </div>\\n\\n      <!-- Links -->\\n\\n\\n    </links>\\n    <!-- Collapsible content -->\\n\\n  </mdb-navbar>\\n  <!--/.Navbar-->\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGF5b3V0L25hdmJhci9uYXZiYXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private userService: UserService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/']);\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n       \\n\\n          <div class=\\\"card-header text-center bg-info\\\">\\n            <h5 class=\\\"text-light\\\">\\n              <strong>Sign In</strong>\\n            </h5>\\n          </div>\\n\\n\\n          <!--Card content-->\\n          <div class=\\\"card-body\\\">\\n\\n            <!-- Form -->\\n            <form style=\\\"color: #757575;\\\" (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\">\\n              <!-- NIC -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"nic\\\">NIC</label>\\n                <input type=\\\"text\\\" name=\\\"nic\\\" id=\\\"nic\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"nic\\\" #nic1=\\\"ngModel\\\" required pattern=\\\"^[0-9]{9}V$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"nic1.touched && !nic1.valid\\\">\\n                  <small *ngIf=\\\"nic1.errors.required\\\">NIC is required!</small>\\n                  <small *ngIf=\\\"nic1.errors.pattern\\\">Invalid NIC format!</small>\\n                </div>\\n              </div>\\n\\n\\n              <!-- Password -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"materialLoginFormPassword\\\">Password</label>\\n                <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"pass\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"password\\\" #pass=\\\"ngModel\\\" required pattern=\\\"^.{6,}\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"pass.touched && !pass.valid\\\">\\n                  <small *ngIf=\\\"pass.errors.required\\\">Password is required!</small>\\n                  <small *ngIf=\\\"pass.errors.pattern\\\">Password should have at least 6 characters!</small>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"d-flex justify-content-around\\\">\\n                <div>\\n                  <!-- Forgot password -->\\n                  <a href=\\\"\\\">Forgot password?</a>\\n                </div>\\n              </div>\\n\\n              <!-- Sign in button -->\\n              <button mdbBtn color=\\\"info\\\" block=\\\"true\\\" class=\\\"my-4\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">Sign in</button>\\n              <!-- Register -->\\n\\n              <p>Not a member?\\n                <a routerLink=\\\"/signup\\\">Signup</a>\\n              </p>\\n\\n            </form>\\n            <!-- Form -->\\n\\n          </div>\\n\\n   \\n\\n      </div>\\n\\n    </div>\\n    <div class=\\\"col-md-3\\\"></div>\\n  </div>\\n</div>\\n\"","module.exports = \"mdb-card {\\n  align-self: auto; }\\n\\n.card {\\n  margin-top: 10%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lzdXJ1L1Byb2plY3RzL0xhbmRDaGFpbi1Gcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWRiLWNhcmR7XG4gICAgYWxpZ24tc2VsZjogYXV0bztcbn1cblxuLmNhcmR7XG4gICAgbWFyZ2luLXRvcDogMTAlO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from '../../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  nic:string;\n  password:string;\n  f:any;\n\n  constructor(private userService:UserService, private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n    const logindata = {\n      nic:this.nic,\n      password:this.password\n    };\n\n    this.userService.auth(logindata).subscribe(data=>{\n      if(data.token){\n        localStorage.setItem('token',data.token);\n        this.router.navigate(['/']);\n      }else{\n        alert(\"Server error\");\n      }\n    },e=>{\n      if (e.error instanceof ProgressEvent) {\n        alert('An error occurred!');\n      } else {\n        alert(e.error.message);\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <div *ngIf=\\\"ads === undefined || ads.length == 0\\\">\\n        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n          You have no posted Ads\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-3\\\"></div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n\\n\\n\\n    <div *ngFor=\\\"let ad of ads\\\">\\n\\n      <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n        <img class=\\\"card-img-top\\\" src=\\\"assets/land.jpg\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <h3 class=\\\"card-title\\\">{{ad.city}}</h3>\\n          <h5 class=\\\"card-title\\\">{{ad.size}} perchs</h5>\\n          <h5 class=\\\"card-title\\\">{{ad.price}}$</h5>\\n          <p class=\\\"card-text\\\">Land ID:{{ad.landId}}</p>\\n          <p class=\\\"card-text\\\">Owner:{{ad.ownerId}}</p>\\n          <p class=\\\"card-text\\\">{{ad.description}}</p>\\n          <p class=\\\"card-text\\\">Call {{ad.phone}} for more info</p>\\n\\n          <button (click)=\\\"delete(ad._id)\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!ad.status==='active'\\\">Delete</button>\\n\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\"","module.exports = \".card {\\n  margin: 20px; }\\n\\n.alert {\\n  margin: 20px; }\\n\\n.flash {\\n  margin: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lzdXJ1L1Byb2plY3RzL0xhbmRDaGFpbi1Gcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvbXktYWRzL215LWFkcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQ0osRUFBQTs7QUFFQTtFQUNJLFlBQ0osRUFBQTs7QUFFQTtFQUNJLFlBQ0osRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbXktYWRzL215LWFkcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJke1xuICAgIG1hcmdpbjogMjBweFxufVxuXG4uYWxlcnR7XG4gICAgbWFyZ2luOiAyMHB4XG59XG5cbi5mbGFzaHtcbiAgICBtYXJnaW46IDIwcHhcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AdService } from 'src/app/services/ad.service';\n\n@Component({\n  selector: 'app-my-ads',\n  templateUrl: './my-ads.component.html',\n  styleUrls: ['./my-ads.component.scss']\n})\nexport class MyAdsComponent implements OnInit {\n  ads: any[];\n\n  constructor(private adService: AdService) { }\n\n  ngOnInit() {\n    this.adService.getMyAds().subscribe(res => {\n      this.ads = res;\n    }, e => {\n      if (e.error instanceof ProgressEvent) {\n        alert('An error occurred!');\n      } else {\n        alert(e.error.message);\n      }\n    });\n  }\n\n  delete(id) {\n    if (confirm(\"Do you want to delete this ad?\\nThis cannot be undone\")) {\n      this.adService.delete(id).subscribe(res => {\n        this.ads = this.ads.filter(ad => ad._id == id);\n        this.ngOnInit();\n      }, e => {\n        if (e.error instanceof ProgressEvent) {\n          alert('An error occurred!');\n        } else {\n          alert(e.error.message);\n        }\n      });\n    }\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div class=\\\"col-md-6\\\">\\n        <ul class=\\\"list-group\\\">\\n          <div *ngFor=\\\"let land of lands\\\">\\n              <li class=\\\"list-group-item list-group-item-success\\\">\\n                id:  {{land.id}}\\n                <br/>\\n                registered time: {{land.regTime}}\\n                <br/>\\n                status: {{land.status}}\\n              </li>\\n          </div>\\n          <div *ngIf=\\\"lands === undefined || lands.length == 0\\\" >\\n            <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n              You have no registered lands!\\n            </div>\\n          </div>\\n        </ul>\\n      </div>\\n      <div class=\\\"col-md-3\\\"></div>\\n    </div>\\n  </div>\"","module.exports = \".list-group {\\n  padding-top: 25%;\\n  padding-bottom: 25%; }\\n\\n.list-group-item {\\n  margin: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lzdXJ1L1Byb2plY3RzL0xhbmRDaGFpbi1Gcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvbXktbGFuZHMvbXktbGFuZHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxnQkFBZ0I7RUFDaEIsbUJBQW1CLEVBQUE7O0FBR3ZCO0VBQ0ksWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9teS1sYW5kcy9teS1sYW5kcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLmxpc3QtZ3JvdXB7XG4gICAgcGFkZGluZy10b3A6IDI1JTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMjUlO1xufVxuXG4ubGlzdC1ncm91cC1pdGVte1xuICAgIG1hcmdpbjogMTBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { BlockchainService } from '../../services/blockchain.service';\n\n@Component({\n  selector: 'app-my-lands',\n  templateUrl: './my-lands.component.html',\n  styleUrls: ['./my-lands.component.scss']\n})\nexport class MyLandsComponent implements OnInit {\n  lands:any[]\n\n  constructor(private bService:BlockchainService) { }\n\n  ngOnInit() {\n    this.bService.getLandsOfUser().subscribe(res=>{\n      this.lands=res;\n    },e=>{\n      if (e.error instanceof ProgressEvent) {\n        alert('An error occurred!');\n      } else {\n        alert(e.error.message);\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <!-- Material form register -->\\n      <div class=\\\"card\\\">\\n\\n          <div class=\\\"card-header text-center bg-info\\\">\\n            <h5 class=\\\"text-light\\\">\\n              <strong>Sign up</strong>\\n            </h5>\\n          </div>\\n\\n          <!--Card content-->\\n          <div class=\\\"card-body\\\">\\n\\n            <!-- Form -->\\n            <form style=\\\"color: #757575;\\\" (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\">\\n\\n              <!-- First name -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"fn\\\">First name</label>\\n                <input type=\\\"text\\\" id=\\\"fn\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"firstName\\\" name=\\\"firstName\\\"\\n                  #fn=\\\"ngModel\\\" required pattern=\\\"^[A-Za-z]+$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"fn.touched && !fn.valid\\\">\\n                  <small *ngIf=\\\"fn.errors.required\\\">First name is required!</small>\\n                  <small *ngIf=\\\"fn.errors.pattern\\\">Invalid name!</small>\\n                </div>\\n              </div>\\n\\n              <!-- Last name -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"ln\\\">Last name</label>\\n                <input type=\\\"text\\\" id=\\\"ln\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"lastName\\\" name=\\\"lastName\\\"\\n                  #ln=\\\"ngModel\\\" required pattern=\\\"^[A-Za-z]+$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"ln.touched && !ln.valid\\\">\\n                  <small *ngIf=\\\"ln.errors.required\\\">Last name is required!</small>\\n                  <small *ngIf=\\\"ln.errors.pattern\\\">Invalid name!</small>\\n                </div>\\n              </div>\\n\\n              <!-- NIC -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"n\\\">NIC</label>\\n                <input type=\\\"text\\\" id=\\\"n\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"nic\\\" name=\\\"nic\\\" #n=\\\"ngModel\\\"\\n                  required pattern=\\\"^[0-9]{9}V$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"n.touched && !n.valid\\\">\\n                  <small *ngIf=\\\"n.errors.required\\\">NIC is required!</small>\\n                  <small *ngIf=\\\"n.errors.pattern\\\">Invalid NIC!</small>\\n                </div>\\n              </div>\\n\\n              <!-- email -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"e\\\">Email</label>\\n                <input type=\\\"email\\\" id=\\\"e\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"email\\\" name=\\\"email\\\" #e=\\\"ngModel\\\"\\n                  required pattern=\\\"^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"e.touched && !e.valid\\\">\\n                  <small *ngIf=\\\"e.errors.required\\\">Email is required!</small>\\n                  <small *ngIf=\\\"e.errors.pattern\\\">Invalid email!</small>\\n                </div>\\n              </div>\\n\\n              <!-- Pasword -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"p\\\">Password</label>\\n                <input type=\\\"password\\\" id=\\\"p\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"password\\\" name=\\\"password\\\"\\n                  #p=\\\"ngModel\\\" required pattern=\\\"^.{6,}\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"p.touched && !p.valid\\\">\\n                  <small *ngIf=\\\"p.errors.required\\\">Password is required!</small>\\n                  <small *ngIf=\\\"p.errors.pattern\\\">Password should have at least 6 characters!</small>\\n                </div>\\n              </div>\\n\\n              <!-- Pasword -->\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"p1\\\">Password(again)</label>\\n                <input type=\\\"password\\\" id=\\\"p1\\\" class=\\\"form-control\\\" mdbInput [(ngModel)]=\\\"password1\\\" name=\\\"password1\\\"\\n                  #p1=\\\"ngModel\\\" required pattern=\\\"^.{6,}\\\" [disabled]=\\\"!p.valid\\\">\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"p1.touched && !p1.valid\\\">\\n                  <small *ngIf=\\\"p1.errors.required\\\">Password is required!</small>\\n                  <small *ngIf=\\\"p1.errors.pattern\\\">Password should have at least 6 characters!</small>\\n                </div>\\n                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"p1.valid\\\">\\n                  <small *ngIf=\\\"password!==password1\\\">Passwords are not equal!</small>\\n                </div>\\n              </div>\\n\\n              <!-- Sign up button -->\\n              <button mdbBtn color=\\\"info\\\" block=\\\"true\\\" class=\\\"my-4\\\" type=\\\"submit\\\"\\n                [disabled]=\\\"!f.valid || password!==password1\\\">Sign Up</button>\\n\\n            </form>\\n            <!-- Form -->\\n\\n          </div>\\n\\n      </div>\\n\\n    </div>\\n    <div class=\\\"col-md-3\\\"></div>\\n  </div>\\n</div>\\n\"","module.exports = \"mdb-card {\\n  align-self: auto; }\\n\\n.card {\\n  margin-top: 10%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lzdXJ1L1Byb2plY3RzL0xhbmRDaGFpbi1Gcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1kYi1jYXJke1xuICAgIGFsaWduLXNlbGY6IGF1dG87XG59XG5cbi5jYXJke1xuICAgIG1hcmdpbi10b3A6IDEwJTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from '../../services/user.service';\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  firstName:string;\n  lastName:string;\n  nic:string;\n  email:string;\n  password:string;\n  password1:string;\n\n  constructor(private userService:UserService, private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n\n    const userData = {\n      firstName:this.firstName,\n      lastName:this.lastName,\n      nic:this.nic,\n      email:this.email,\n      password:this.password\n    }\n\n    this.userService.signup(userData).subscribe(res=>{\n      this.firstName = null;\n      this.lastName = null;\n      this.nic = null;\n      this.email = null;\n      this.password =null;\n      this.password1 =null;\n      \n      if(res.token){\n        localStorage.setItem('token',res.token);\n        this.router.navigate(['/']);\n      }else{\n        alert(\"Server Error!\");\n      }\n    },e=>{\n      if (e.error instanceof ProgressEvent) {\n        alert('An error occurred!');\n      } else {\n        alert(e.error.message);\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <ul class=\\\"list-group\\\">\\n        <div *ngFor=\\\"let user of users\\\">\\n            <li class=\\\"list-group-item list-group-item-success\\\">{{user.NIC}}</li>\\n        </div>\\n        <div *ngIf=\\\"users === undefined || users.length == 0\\\" >\\n          <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n            No registered users!\\n          </div>\\n        </div>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-md-3\\\"></div>\\n  </div>\\n</div>\"","module.exports = \".list-group {\\n  padding-top: 25%;\\n  padding-bottom: 25%; }\\n\\n.list-group-item {\\n  margin: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2lzdXJ1L1Byb2plY3RzL0xhbmRDaGFpbi1Gcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvdXNlcnMvdXNlcnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxnQkFBZ0I7RUFDaEIsbUJBQW1CLEVBQUE7O0FBR3ZCO0VBQ0ksWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy91c2Vycy91c2Vycy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLmxpc3QtZ3JvdXB7XG4gICAgcGFkZGluZy10b3A6IDI1JTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMjUlO1xufVxuXG4ubGlzdC1ncm91cC1pdGVte1xuICAgIG1hcmdpbjogMTBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\nimport { BlockchainService } from '../../services/blockchain.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n  users:any[];\n\n  constructor(private bService:BlockchainService) { }\n\n  ngOnInit() {\n    this.bService.getUsers().subscribe(res=>{\n      this.users=res;\n      console.log(res);\n    },e => {\n      if (e.error instanceof ProgressEvent) {\n        alert('An error occurred!');\n      } else {\n        alert(e.error.message);\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type' : 'application/json'\n  })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdService {\n\n  constructor(private http:HttpClient) { }\n\n  getAllAds():Observable<any>{\n    let url = 'http://localhost:4000/api/ads';\n    return this.http.get(url,httpOptions);\n  }\n\n  getMyAds():Observable<any>{\n    let url = 'http://localhost:4000/api/ads/my';\n    return this.http.get(url,httpOptions);\n  }\n\n  delete(id):Observable<any>{\n    let url = `http://localhost:4000/api/ads/${id}`;\n    return this.http.delete(url,httpOptions);\n  }\n\n  post(adData:any):Observable<any>{\n    let url = 'http://localhost:4000/api/ads';\n    let data=JSON.stringify(adData);\n    return this.http.post(url,data,httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type' : 'application/json'\n  })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlockchainService {\n\n  constructor(private http:HttpClient) { }\n\n  getUsers():Observable<any>{\n    let url = 'http://localhost:4000/api/blockchain/users';\n    return this.http.get(url,httpOptions);\n  }\n\n  getLands():Observable<any>{\n    let url = 'http://localhost:4000/api/blockchain/lands';\n    return this.http.get(url,httpOptions);\n  }\n\n  getLandsOfUser():Observable<any>{\n    let url = 'http://localhost:4000/api/blockchain/landsOfUser';\n    return this.http.get(url,httpOptions);\n  }\n\n  changeOwner(ownerData:any):Observable<any>{\n    let url = 'http://localhost:4000/api/blockchain/changeOwner';\n    let data=JSON.stringify(ownerData);\n    return this.http.post(url,data,httpOptions);\n  }\n\n  registerLand(landData:any):Observable<any>{\n    let url = 'http://localhost:4000/api/blockchain/registerLand';\n    let data=JSON.stringify(landData);\n    return this.http.post(url,data,httpOptions);\n  }\n\n  registerUser(userData:any):Observable<any>{\n    let url = 'http://localhost:4000/api/blockchain/registerUser';\n    let data=JSON.stringify(userData);\n    return this.http.post(url,data,httpOptions);\n  }\n  \n  getLandHistory(userData:any):Observable<any>{\n    let url = 'http://localhost:4000/api/blockchain/landHistory';\n    let data=JSON.stringify(userData);\n    return this.http.post(url,data,httpOptions);\n  }\n\n  divideLand(Data:any):Observable<any>{\n    let url = 'http://localhost:4000/api/blockchain/divideLand';\n    let data=JSON.stringify(Data);\n    return this.http.post(url,data,httpOptions);\n  }\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient, private jwtHelper: JwtHelperService) { }\n\n  auth(loginData: any): Observable<any> {\n    let url = 'http://localhost:4000/api/users/login';\n    return this.http.post(url, JSON.stringify(loginData), httpOptions);\n  }\n\n  signup(userData: any): Observable<any> {\n    let url = 'http://localhost:4000/api/users/signup';\n    return this.http.post(url, JSON.stringify(userData), httpOptions);\n  }\n\n  registerAdmin(userData: any): Observable<any> {\n    let url = 'http://localhost:4000/api/users/registerAdmin';\n    return this.http.post(url, JSON.stringify(userData), httpOptions);\n  }\n\n  get user(): any {\n    let output;\n    let token = localStorage.getItem('token');\n    if (!token) {\n      output = null;\n    } else if (this.jwtHelper.isTokenExpired()) {\n      output = null;\n      localStorage.removeItem('token');\n    } else {\n      output = this.jwtHelper.decodeToken(token).type;\n    }\n    return output;\n  }\n\n  get nic(): any {\n    let output;\n    let token = localStorage.getItem('token');\n    if (!token) {\n      output = null;\n    } else if (this.jwtHelper.isTokenExpired()) {\n      output = null;\n      localStorage.removeItem('token');\n    } else {\n      output = this.jwtHelper.decodeToken(token).nic;\n    }\n    return output;\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}